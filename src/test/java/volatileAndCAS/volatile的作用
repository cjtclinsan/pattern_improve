一、保证线程的可见性：
大家知道java是有堆内存的，堆内存是所有线程共享的内存，除了共享内存外，每个线程都有自己专属的区域，都有自己的工作内存。
在共享内存中存在一个值，我们的线程去访问这个值的时候，都会去将这个值copy一份到自己的工作空间，对这个值的任何改变，都会先在自己的空间进行，
改完以后再写回到共享堆内存。在这个线程中发生的改变，不会及时反应到另一个线程里面，这就是线程间的不可见。对这个变量值加volitale之后，
能保证一个线程的改变，另一个线程马上就能看到。
MESI:本质上是使用了CPU的一个叫做高速缓存一致性协议


二、禁止指令重排序
指令重排序也和CPU有关。CPU原来执行一条指令也是按照它一步一步的顺序的执行，现在的CPU为了提升效率，会把指令并发的来执行。
第一个指令执行到一半的时候，第二个指令可能已经开始执行了。在这种新的架构的设计基础上想充分利用这一点，需要编译器把你的源码编译完成之后的指令进行一个重排序。